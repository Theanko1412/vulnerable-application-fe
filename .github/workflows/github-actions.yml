name: Node CI

on: [push]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: npm build
        run: |
          echo "REACT_APP_BACKEND_URL=${{ secrets.REACT_APP_BACKEND_URL }}" > .env
          npm install
          npm run build --if-present
        env:
          CI: false


  # package:
  #   runs-on: ubuntu-latest
  #   if: startsWith(github.ref, 'refs/tags/')
  #   needs: build
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: 18

  #     - name: npm build
  #       run: |
  #         npm install
  #         npm run build --if-present
  #       env:
  #         CI: false
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: Package
  #         path: ./build

  tagged-release:
    name: "Tagged release"
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          draft: false
          files: "*.jar"

  push-to-docker-registry:
    name: "Push to Docker Registry"
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: tagged-release

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: theanko1412/home-server

      - name: Extract repository name
        id: repo
        run: echo "::set-output name=repo::$(echo ${{ github.repository }} | cut -d'/' -f2)"
        shell: bash

      - name: Modify tags
        id: modify-tags
        run: |
          IFS=',' read -ra tags <<< "${{ steps.meta.outputs.tags }}"
          modified_tags=()
          for tag in "${tags[@]}"; do
            prefix=$(echo "$tag" | awk -F: '{print $1}')
            version=$(echo "$tag" | awk -F: '{print $NF}')
            modified_tags+=("$prefix:${{ steps.repo.outputs.repo }}-$version")
          done
          echo "::set-output name=tags::${modified_tags[*]}"
        shell: bash

      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./support/docker/vulnerable-application-fe/Dockerfile
          push: true
          tags: ${{ steps.modify-tags.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}